{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, Platform, Dimensions, Pressable } from 'react-native';\nimport Triangle from './components/Triangle';\nimport { ScreenWidth, isIOS } from '../helpers';\nimport { getElementVisibleWidth } from './helpers/getTooltipCoordinate';\nimport { getTooltipStyle } from './helpers/getTooltipStyle';\nexport const Tooltip = _a => {\n  var {\n      withOverlay = true,\n      overlayColor = '#fafafa14',\n      highlightColor = 'transparent',\n      withPointer = true,\n      toggleOnPress = true,\n      toggleAction = 'onPress',\n      height = 40,\n      width = 150,\n      containerStyle = {},\n      backgroundColor = '#617080',\n      pointerColor = backgroundColor,\n      pointerStyle,\n      onClose = () => {},\n      onOpen = () => {},\n      visible = false,\n      skipAndroidStatusBar = false,\n      ModalComponent = Modal,\n      closeOnlyOnBackdropPress = false,\n      animationType = 'fade'\n    } = _a,\n    props = __rest(_a, [\"withOverlay\", \"overlayColor\", \"highlightColor\", \"withPointer\", \"toggleOnPress\", \"toggleAction\", \"height\", \"width\", \"containerStyle\", \"backgroundColor\", \"pointerColor\", \"pointerStyle\", \"onClose\", \"onOpen\", \"visible\", \"skipAndroidStatusBar\", \"ModalComponent\", \"closeOnlyOnBackdropPress\", \"animationType\"]);\n  const isMounted = React.useRef(false);\n  const renderedElement = React.useRef(null);\n  const [dimensions, setDimensions] = React.useState({\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0\n  });\n  const getElementPosition = React.useCallback(() => {\n    var _a;\n    (_a = renderedElement.current) === null || _a === void 0 ? void 0 : _a.measure((_frameOffsetX, _frameOffsetY, _width = 0, _height = 0, pageOffsetX = 0, pageOffsetY = 0) => {\n      isMounted.current && setDimensions({\n        xOffset: pageOffsetX,\n        yOffset: isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - Platform.select({\n          android: StatusBar.currentHeight,\n          ios: 20,\n          default: 0\n        }),\n        elementWidth: _width,\n        elementHeight: _height\n      });\n    });\n  }, [skipAndroidStatusBar]);\n  const handleOnPress = React.useCallback(() => {\n    getElementPosition();\n    isMounted.current && toggleOnPress && (visible ? onClose === null || onClose === void 0 ? void 0 : onClose() : onOpen === null || onOpen === void 0 ? void 0 : onOpen());\n  }, [getElementPosition, onClose, onOpen, toggleOnPress, visible]);\n  const Pointer = ({\n    tooltipY\n  }) => {\n    const {\n      yOffset,\n      xOffset,\n      elementHeight,\n      elementWidth\n    } = dimensions;\n    const pastMiddleLine = yOffset > (tooltipY || 0);\n    if (!withPointer) {\n      return null;\n    }\n    return React.createElement(View, {\n      style: {\n        position: 'absolute',\n        top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n        [I18nManager.isRTL ? 'right' : 'left']: xOffset + getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 - 7.5\n      }\n    }, React.createElement(Triangle, {\n      style: pointerStyle,\n      pointerColor: pointerColor,\n      isDown: pastMiddleLine\n    }));\n  };\n  const TooltipHighlightedButtonStyle = React.useMemo(() => {\n    const {\n      yOffset,\n      xOffset,\n      elementWidth,\n      elementHeight\n    } = dimensions;\n    return {\n      position: 'absolute',\n      top: yOffset,\n      [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n      backgroundColor: highlightColor,\n      overflow: 'visible',\n      width: elementWidth,\n      height: elementHeight\n    };\n  }, [dimensions, highlightColor]);\n  const HighlightedButton = () => {\n    if (closeOnlyOnBackdropPress) {\n      return React.createElement(Pressable, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: handleOnPress,\n        style: TooltipHighlightedButtonStyle\n      }, props.children);\n    } else {\n      return React.createElement(View, {\n        style: TooltipHighlightedButtonStyle\n      }, props.children);\n    }\n  };\n  React.useEffect(() => {\n    isMounted.current = true;\n    requestAnimationFrame(getElementPosition);\n    const dimensionsListener = Dimensions.addEventListener('change', getElementPosition);\n    return () => {\n      isMounted.current = false;\n      if (dimensionsListener === null || dimensionsListener === void 0 ? void 0 : dimensionsListener.remove) {\n        dimensionsListener.remove();\n      } else {\n        Dimensions.removeEventListener('change', getElementPosition);\n      }\n    };\n  }, [getElementPosition]);\n  const tooltipStyle = React.useMemo(() => getTooltipStyle(Object.assign(Object.assign({}, dimensions), {\n    backgroundColor,\n    containerStyle,\n    height,\n    width,\n    withPointer\n  })), [backgroundColor, containerStyle, dimensions, height, width, withPointer]);\n  return React.createElement(View, {\n    collapsable: false,\n    ref: renderedElement\n  }, React.createElement(Pressable, Object.assign({}, {\n    [toggleAction]: handleOnPress\n  }, {\n    delayLongPress: 250\n  }), props.children), React.createElement(ModalComponent, {\n    transparent: true,\n    visible: visible,\n    onShow: onOpen,\n    animationType: animationType\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: withOverlay ? overlayColor : 'transparent',\n      flex: 1\n    },\n    onPress: handleOnPress,\n    activeOpacity: 1\n  }, React.createElement(View, null, React.createElement(HighlightedButton, null), React.createElement(Pointer, {\n    tooltipY: tooltipStyle.top\n  }), React.createElement(View, {\n    style: tooltipStyle,\n    testID: \"tooltipPopoverContainer\"\n  }, props.popover)))));\n};\nTooltip.displayName = 'Tooltip';","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","TouchableOpacity","Modal","View","StatusBar","I18nManager","Platform","Dimensions","Pressable","Triangle","ScreenWidth","isIOS","getElementVisibleWidth","getTooltipStyle","Tooltip","_a","withOverlay","overlayColor","highlightColor","withPointer","toggleOnPress","toggleAction","height","width","containerStyle","backgroundColor","pointerColor","pointerStyle","onClose","onOpen","visible","skipAndroidStatusBar","ModalComponent","closeOnlyOnBackdropPress","animationType","props","isMounted","useRef","renderedElement","dimensions","setDimensions","useState","yOffset","xOffset","elementWidth","elementHeight","getElementPosition","useCallback","current","measure","_frameOffsetX","_frameOffsetY","_width","_height","pageOffsetX","pageOffsetY","select","android","currentHeight","ios","default","handleOnPress","Pointer","tooltipY","pastMiddleLine","createElement","style","position","top","isRTL","isDown","TooltipHighlightedButtonStyle","useMemo","overflow","HighlightedButton","testID","onPress","children","useEffect","requestAnimationFrame","dimensionsListener","addEventListener","remove","removeEventListener","tooltipStyle","assign","collapsable","ref","delayLongPress","transparent","onShow","flex","activeOpacity","popover","displayName"],"sources":["/home/jiri/lab/stripe-udemy/node_modules/@rneui/base/dist/Tooltip/Tooltip.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, Platform, Dimensions, Pressable, } from 'react-native';\nimport Triangle from './components/Triangle';\nimport { ScreenWidth, isIOS } from '../helpers';\nimport { getElementVisibleWidth } from './helpers/getTooltipCoordinate';\nimport { getTooltipStyle } from './helpers/getTooltipStyle';\nexport const Tooltip = (_a) => {\n    var { withOverlay = true, overlayColor = '#fafafa14', highlightColor = 'transparent', withPointer = true, toggleOnPress = true, toggleAction = 'onPress', height = 40, width = 150, containerStyle = {}, backgroundColor = '#617080', pointerColor = backgroundColor, pointerStyle, onClose = () => { }, onOpen = () => { }, visible = false, skipAndroidStatusBar = false, ModalComponent = Modal, closeOnlyOnBackdropPress = false, animationType = 'fade' } = _a, props = __rest(_a, [\"withOverlay\", \"overlayColor\", \"highlightColor\", \"withPointer\", \"toggleOnPress\", \"toggleAction\", \"height\", \"width\", \"containerStyle\", \"backgroundColor\", \"pointerColor\", \"pointerStyle\", \"onClose\", \"onOpen\", \"visible\", \"skipAndroidStatusBar\", \"ModalComponent\", \"closeOnlyOnBackdropPress\", \"animationType\"]);\n    const isMounted = React.useRef(false);\n    const renderedElement = React.useRef(null);\n    const [dimensions, setDimensions] = React.useState({\n        yOffset: 0,\n        xOffset: 0,\n        elementWidth: 0,\n        elementHeight: 0,\n    });\n    const getElementPosition = React.useCallback(() => {\n        var _a;\n        (_a = renderedElement.current) === null || _a === void 0 ? void 0 : _a.measure((_frameOffsetX, _frameOffsetY, _width = 0, _height = 0, pageOffsetX = 0, pageOffsetY = 0) => {\n            isMounted.current &&\n                setDimensions({\n                    xOffset: pageOffsetX,\n                    yOffset: isIOS || skipAndroidStatusBar\n                        ? pageOffsetY\n                        : pageOffsetY -\n                            Platform.select({\n                                android: StatusBar.currentHeight,\n                                ios: 20,\n                                default: 0,\n                            }),\n                    elementWidth: _width,\n                    elementHeight: _height,\n                });\n        });\n    }, [skipAndroidStatusBar]);\n    const handleOnPress = React.useCallback(() => {\n        getElementPosition();\n        isMounted.current && toggleOnPress && (visible ? onClose === null || onClose === void 0 ? void 0 : onClose() : onOpen === null || onOpen === void 0 ? void 0 : onOpen());\n    }, [getElementPosition, onClose, onOpen, toggleOnPress, visible]);\n    const Pointer = ({ tooltipY }) => {\n        const { yOffset, xOffset, elementHeight, elementWidth } = dimensions;\n        const pastMiddleLine = yOffset > (tooltipY || 0);\n        if (!withPointer) {\n            return null;\n        }\n        return (React.createElement(View, { style: {\n                position: 'absolute',\n                top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset +\n                    getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n                    7.5,\n            } },\n            React.createElement(Triangle, { style: pointerStyle, pointerColor: pointerColor, isDown: pastMiddleLine })));\n    };\n    const TooltipHighlightedButtonStyle = React.useMemo(() => {\n        const { yOffset, xOffset, elementWidth, elementHeight } = dimensions;\n        return {\n            position: 'absolute',\n            top: yOffset,\n            [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n            backgroundColor: highlightColor,\n            overflow: 'visible',\n            width: elementWidth,\n            height: elementHeight,\n        };\n    }, [dimensions, highlightColor]);\n    const HighlightedButton = () => {\n        if (closeOnlyOnBackdropPress) {\n            return (React.createElement(Pressable, { testID: \"tooltipTouchableHighlightedButton\", onPress: handleOnPress, style: TooltipHighlightedButtonStyle }, props.children));\n        }\n        else {\n            return (React.createElement(View, { style: TooltipHighlightedButtonStyle }, props.children));\n        }\n    };\n    React.useEffect(() => {\n        isMounted.current = true;\n        requestAnimationFrame(getElementPosition);\n        const dimensionsListener = Dimensions.addEventListener('change', getElementPosition);\n        return () => {\n            isMounted.current = false;\n            if (dimensionsListener === null || dimensionsListener === void 0 ? void 0 : dimensionsListener.remove) {\n                dimensionsListener.remove();\n            }\n            else {\n                Dimensions.removeEventListener('change', getElementPosition);\n            }\n        };\n    }, [getElementPosition]);\n    const tooltipStyle = React.useMemo(() => getTooltipStyle(Object.assign(Object.assign({}, dimensions), { backgroundColor,\n        containerStyle,\n        height,\n        width,\n        withPointer })), [backgroundColor, containerStyle, dimensions, height, width, withPointer]);\n    return (React.createElement(View, { collapsable: false, ref: renderedElement },\n        React.createElement(Pressable, Object.assign({}, { [toggleAction]: handleOnPress }, { delayLongPress: 250 }), props.children),\n        React.createElement(ModalComponent, { transparent: true, visible: visible, onShow: onOpen, animationType: animationType },\n            React.createElement(TouchableOpacity, { style: {\n                    backgroundColor: withOverlay ? overlayColor : 'transparent',\n                    flex: 1,\n                }, onPress: handleOnPress, activeOpacity: 1 },\n                React.createElement(View, null,\n                    React.createElement(HighlightedButton, null),\n                    React.createElement(Pointer, { tooltipY: tooltipStyle.top }),\n                    React.createElement(View, { style: tooltipStyle, testID: \"tooltipPopoverContainer\" }, props.popover))))));\n};\nTooltip.displayName = 'Tooltip';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}